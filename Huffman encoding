#include<bits/stdc++.h>
using namespace std;

struct minheap
{
  char data;
  int freq;
  minheap *left,*right;
  minheap(char data,int freq)
  {
    left=right=NULL;
    this->data=data;
    this->freq=freq;
  }
};

struct compare
{
    bool operator()(minheap* l,minheap* r)
    {
         if(l->freq > r->freq)
            return 1;
        else if(l->freq==r->freq && l->data < r->data)
            return 1;
        else
            return 0;
    }
};

void printnodes(minheap *root,string str)
{
    if(root==NULL)
        return;
    if(root->data!='$')
        cout<<str<<" ";
    printnodes(root->left,str+'0');
    printnodes(root->right,str+'1');
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        int n=s.size();
        int arr[n];
        for(int i=0;i<n;i++)
        cin>>arr[i];
        struct minheap *left,*right,*top;
        priority_queue<minheap*,vector<minheap*>,compare> minheap;
        for(int i=0;i<n;i++)
        {
             struct minheap *temp=new minheap(s[i],arr[i]);
             pq.push(temp); 
        }
        while(minheap.size()!=1)
        {
            left=minheap.top();
            minheap.pop();
            right=minheap.top();
            minheap.pop();
            top=new minheap('$',left->freq+right->freq);
            top->left=left;
            top->right=right;
            minheap.push(top);
        }
        printnodes(minheap.top(),"");
        cout<<endl;
    }
}
